{"version":3,"sources":["webpack:///./src/utils/helpers.js","webpack:///./src/utils/seo.js","webpack:///./src/pages/index.js"],"names":["getImageMap","images","regex","hasMultipleImages","limit","reduce","map","image","slug","node","relativePath","match","hasOwnProperty","length","push","childImageSharp","fluid","arr","SEO","description","lang","meta","img","title","pathname","site","metaDescription","siteMetadata","src","siteUrl","canonical","htmlAttributes","titleTemplate","link","rel","href","name","content","keywords","join","property","author","concat","width","height","defaultProps","data","firstName","unemployed","lastName","occupation","useContext","ThemeContext","dark","pageName","className","background","style","fontSize","color","position","bottom","marginLeft","marginRight","target","icon","download","query"],"mappings":"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","file":"component---src-pages-index-js-b92d14a6d04eaf2dbfc6.js","sourcesContent":["export default {\r\n  getImageMap: (images, regex, hasMultipleImages = false, limit = 3) => {\r\n    return images.reduce((map, image) => {\r\n      const slug = image.node.relativePath.match(regex)[0]\r\n      if (hasMultipleImages) {\r\n        if (map.hasOwnProperty(slug)) {\r\n          if (map[slug].length <= limit)\r\n            map[slug].push(image.node.childImageSharp.fluid)\r\n        } else {\r\n          const arr = []\r\n          arr.push(image.node.childImageSharp.fluid)\r\n          map[slug] = arr\r\n        }\r\n      } else {\r\n        map[slug] = image.node.childImageSharp.fluid\r\n      }\r\n      return map\r\n    }, {})\r\n  },\r\n}\r\n","/** https://www.gatsbyjs.org/docs/add-seo-component/ */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst SEO = ({ description, lang, meta, image: img, title, pathname }) => {\r\n  const { site } = useStaticQuery(query)\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const image = img && img.src ? `${site.siteMetadata.siteUrl}${img.src}` : null\r\n\r\n  const canonical = pathname ? `${site.siteMetadata.siteUrl}${pathname}` : null\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{ lang }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      link={canonical ? [{ rel: `canonical`, href: canonical }] : []}\r\n      meta={[\r\n        { name: `description`, content: metaDescription },\r\n        { name: `keywords`, content: site.siteMetadata.keywords.join(`,`) },\r\n        { property: `og:title`, content: title },\r\n        { property: `og:description`, content: metaDescription },\r\n        { property: `og:type`, content: `website` },\r\n        { name: `twitter:creator`, content: site.siteMetadata.author },\r\n        { name: `twitter:title`, content: `title` },\r\n        { name: `twitter:description`, content: metaDescription },\r\n      ]\r\n        .concat(\r\n          img\r\n            ? [\r\n                { property: \"og:image\", content: image },\r\n                { property: \"og:image:width\", content: img.width },\r\n                { property: \"og:image:height\", content: img.height },\r\n                { name: \"twitter:card\", content: \"summary_large_image\" },\r\n              ]\r\n            : [{ name: \"twitter:card\", content: \"summary\" }]\r\n        )\r\n        .concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nexport default SEO\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n  image: PropTypes.shape({\r\n    src: PropTypes.string.isRequired,\r\n    height: PropTypes.number.isRequired,\r\n    width: PropTypes.number.isRequired,\r\n  }),\r\n  pathname: PropTypes.string,\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nconst query = graphql`\r\n  query SEO {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author\r\n        keywords\r\n        siteUrl\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React, { useContext } from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport ThemeContext from \"../utils/theme\"\r\nimport { PageLayout } from \"../components\"\r\nimport { SEO } from \"../utils\"\r\nimport { Container, Image } from \"react-bootstrap\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { AddExternalJS } from \"../components\"\r\nimport { CanvasHolder } from \"../components\"\r\n\r\nexport default ({ data }) => {\r\n  const { unemployed, firstName, lastName, occupation } = data.site.siteMetadata\r\n  const { dark } = useContext(ThemeContext)\r\n  return (\r\n    <PageLayout pageName=\"main\">\r\n      <SEO title=\"Home\" />\r\n      <AddExternalJS />\r\n      <CanvasHolder />\r\n      \r\n      <Container className=\"text-center pt-5 mt-5\" background=\"\">\r\n        <Container className=\"py-0 my-0\">\r\n          <h1\r\n            style={{\r\n              fontSize: \"min(5rem, 10vw)\",\r\n              color: \"black\",\r\n            }}\r\n          >\r\n            <span className=\"first-name\">{firstName}</span>&nbsp;\r\n            <span className=\"last-name\">{lastName}</span>\r\n          </h1>\r\n          <p>\r\n            <i>{`Finding my way...`}</i>\r\n          </p>\r\n        </Container>\r\n        <Container\r\n          className=\"py-0 my-0\"\r\n          style={{ position: \"absolute\", bottom: \"0\" }}\r\n        >\r\n          {/* {unemployed && (\r\n            <p className=\"mt-2\">\r\n              <b> Hey! I am looking for new opportunities :)</b>\r\n            </p>\r\n          )}\r\n          <hr className=\"my-3 w-25\" /> */}\r\n          <div\r\n            className=\"d-md-inline-flex icons-container\"\r\n            style={{\r\n              position: \"relative\",\r\n              marginLeft: \"0px\",\r\n              marginRight: \"auto\",\r\n            }}\r\n          >\r\n            <a\r\n              href=\"https://github.com/Souruly\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <FontAwesomeIcon\r\n                icon={[\"fab\", \"github\"]}\r\n                className=\"icons github\"\r\n                title=\"Github\"\r\n              />\r\n            </a>\r\n            <a\r\n              href=\"mailto:souruly@gmail.com\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <FontAwesomeIcon\r\n                icon={[\"fas\", \"envelope\"]}\r\n                className=\"icons mail\"\r\n                title=\"e-mail\"\r\n              />\r\n            </a>\r\n            <a\r\n              href=\"https://www.instagram.com/souravkulkarni/\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <FontAwesomeIcon\r\n                icon={[\"fab\", \"instagram\"]}\r\n                className=\"icons instagram\"\r\n                title=\"insta\"\r\n              />\r\n            </a>\r\n            <a href=\"../../mydata/Kulkarni_CV.pdf\" target=\"_blank\" download>\r\n              <FontAwesomeIcon\r\n                icon={[\"fas\", \"file-alt\"]}\r\n                className=\"icons file\"\r\n                title=\"Resume\"\r\n              />\r\n            </a>\r\n          </div>\r\n        </Container>\r\n      </Container>\r\n    </PageLayout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        unemployed\r\n        firstName\r\n        lastName\r\n        occupation\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}
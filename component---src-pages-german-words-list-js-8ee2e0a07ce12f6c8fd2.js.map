{"version":3,"sources":["webpack:///./src/styles/page-styles/germanWordsList.js","webpack:///./src/pages/germanWordsList.js"],"names":["StyledTable","styled","table","div","GlobalFilter","dataLength","setFilterTerm","React","useState","value","setValue","onChange","e","sVal","target","placeholder","GermanWordDataTable","headings","data","initialColumns","initialRows","globalFilter","setGlobalFilter","useTable","filteredItems","items","searchTerm","forEach","item","word","toLowerCase","includes","push","useGlobalFilter","config","sortConfig","setSortConfig","sortableItems","sort","a","b","key","direction","sortedItems","requestSort","useSort","getClassNamesFor","name","undefined","renderHeadings","map","heading","field","type","onClick","className","renderData","Fragment","id","meaning","example","translation","wordType","colSpan","length","Home","bigTitle","germanWords","rows"],"mappings":"oNAEaA,EAAcC,IAAOC,MAAV,mFAAGD,CAAH,gtBAqEMA,IAAOE,IAAV,sFAAGF,CAAH,gTCrD3B,SAASG,EAAT,GAAsD,IAA9BC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,cAAiB,EACzBC,IAAMC,SAAS,IAAlCC,EAD4C,KACrCC,EADqC,KAQnD,OACE,yCACW,IACT,2BACED,MAAOA,GAAS,GAChBE,SAAU,SAAAC,GAVhB,IAAkBC,IAWDD,EAAEE,OAAOL,MAVxBH,EAAcO,GACdH,EAASG,IAWLE,YAAW,SAPf,OASYV,EATZ,YA2DJ,SAASW,EAAT,GAAkD,IAAnBC,EAAkB,EAAlBA,SAAkB,EA/EjD,YAAuC,IAAnBA,EAAkB,EAAlBA,SAAUC,EAAQ,EAARA,KAAQ,EACIX,IAAMC,SAAS,IAEvD,MAAO,CACLW,eAAgBF,EAChBG,YAAaF,EACbG,aANkC,KAOlCC,gBAPkC,MAqFhCC,CAAS,CAAEN,WAAUC,KANsB,EAARA,OAGrCE,GAH6C,EAE7CD,eAF6C,EAG7CC,aACAC,EAJ6C,EAI7CA,aACAC,EAL6C,EAK7CA,gBAGIE,EArDR,SAAyBC,EAAOC,GAC9B,IAAIF,EAAgB,GASpB,OAPAC,EAAME,SAAQ,SAAAC,GACEA,EAAKC,KAAKC,cACZC,SAASL,EAAWI,gBAC9BN,EAAcQ,KAAKJ,MAIhBJ,EA2CeS,CAAgBb,EAAaC,GARJ,EAhCjC,SAACI,EAAOS,QAAkB,IAAlBA,MAAS,MAAS,MACJ3B,IAAMC,SAAS0B,GAA5CC,EADiC,KACrBC,EADqB,KAGpCC,EAAgBZ,EACD,OAAfU,GACFE,EAAcC,MAAK,SAACC,EAAGC,GACrB,OAAID,EAAEJ,EAAWM,KAAOD,EAAEL,EAAWM,KACH,cAAzBN,EAAWO,WAA6B,EAAI,EAEjDH,EAAEJ,EAAWM,KAAOD,EAAEL,EAAWM,KACH,cAAzBN,EAAWO,UAA4B,GAAK,EAE9C,KAiBX,MAAO,CAAEC,YAAaN,EAAeO,YAbjB,SAAAH,GAClB,IAAIC,EAAY,YAEdP,GACAA,EAAWM,MAAQA,GACM,cAAzBN,EAAWO,YAEXA,EAAY,cAGdN,EAAc,CAAEK,MAAKC,eAG2BP,cAaDU,CAAQrB,GAAjDmB,EAVuC,EAUvCA,YAAaC,EAV0B,EAU1BA,YAAaT,EAVa,EAUbA,WAE5BW,EAAmB,SAAAC,GACvB,GAAKZ,EAGL,OAAOA,EAAWM,MAAQM,EAAOZ,EAAWO,eAAYM,GAGpDC,EAAiBhC,EAASiC,KAAI,SAAAC,GAAO,OACzC,wBAAIV,IAAKU,EAAQC,OACf,4BACEC,KAAK,SACLC,QAAS,kBAAMV,EAAYO,EAAQC,QACnCG,UAAWT,EAAiBK,EAAQC,QAEnCD,EAAQJ,UAKTS,EAAab,EAAYO,KAAI,SAAAtB,GAAI,OACrC,kBAAC,IAAM6B,SAAP,CAAgBhB,IAAKb,EAAK8B,IACxB,4BACE,4BAAK9B,EAAKC,MACV,4BAAKD,EAAK+B,SACV,4BAAK/B,EAAKgC,SACV,4BAAKhC,EAAKiC,aACV,4BAAKjC,EAAKkC,eAKhB,OACE,kBAAC9D,EAAD,KACE,+BACE,4BAAKiD,GACL,4BACE,wBAAIc,QAAS9C,EAAS+C,QACpB,kBAAC5D,EAAD,CACEC,WAAYmB,EAAcwC,OAC1B1D,cAAegB,OAKvB,+BAAQkC,IAKC,SAASS,IACtB,OACE,kBAAC,IAAD,CAAYC,SAAS,gBACnB,kBAAC,IAAD,KACE,kBAAClD,EAAD,CAAqBC,SAAUkD,IAAYlD,SAAUC,KAAMiD,IAAYC","file":"component---src-pages-german-words-list-js-8ee2e0a07ce12f6c8fd2.js","sourcesContent":["import styled from \"styled-components/macro\"\r\n\r\nexport const StyledTable = styled.table`\r\n  width: 90%;\r\n  max-width : 800px;\r\n  padding: 10px;\r\n  margin: 10px;\r\n  border: 1px solid black;\r\n  text-align: center;\r\n  font-weight: normal;\r\n\r\n  th,\r\n  td {\r\n    border: 1px solid black;\r\n  }\r\n\r\n  tbody tr:nth-child(even) {\r\n    background-color: lightGrey;\r\n  }\r\n  \r\n      \r\n  thead {\r\n    text-align: center;\r\n    background: var(--customDarkGrey);\r\n  }\r\n\r\n  thead button:focus {\r\n    border: none;\r\n    outline: none;\r\n    background: white;\r\n    color: var(--customDarkGrey);\r\n  }\r\n\r\n  thead button {\r\n    text-align: center;\r\n    border: none;\r\n    background: none;\r\n    color: white;\r\n  }\r\n\r\n  thead button::after {\r\n    content: \" ↕\";\r\n  }\r\n\r\n  thead button.ascending::after {\r\n    content: \" ↓\";\r\n  }\r\n\r\n  thead button.descending::after {\r\n    content: \" ↑\";\r\n  }\r\n\r\n  tbody {\r\n    width: 90%;\r\n  }\r\n\r\n  td.itemNotesCell p{\r\n    @media (max-width: 600px) {\r\n      display:none;\r\n    }\r\n  }\r\n\r\n  tr.itemNotesRow{\r\n    display:none;\r\n    @media (max-width: 600px) {\r\n      display:revert;\r\n      border-bottom: 2px solid black;    \r\n    }\r\n  }\r\n`\r\n\r\nexport const TableContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: auto;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 10px;\r\n\r\n  padding: 1rem;\r\n\r\n  table {\r\n    border: 2px solid black;\r\n    text-align : center;\r\n    width : 90%;\r\n    max-width : 800px;\r\n\r\n    th{ \r\n      background : var(--customDarkGrey);\r\n      color: white;\r\n    }\r\n\r\n    th,\r\n    td {\r\n      border 1px solid black;\r\n      margin: 0;\r\n      padding: 0.5rem;\r\n    }\r\n  }\r\n`","import React from \"react\"\r\nimport { Container } from \"../styles/global-styles\"\r\nimport { PageLayout } from \"../components\"\r\nimport { germanWords } from \"../listData/germanWordsList\"\r\n\r\nimport { StyledTable } from \"../styles/page-styles/germanWordsList\"\r\n\r\nfunction useTable({ headings, data }) {\r\n  const [globalFilter, setGlobalFilter] = React.useState(\"\")\r\n\r\n  return {\r\n    initialColumns: headings,\r\n    initialRows: data,\r\n    globalFilter,\r\n    setGlobalFilter,\r\n  }\r\n}\r\n\r\nfunction GlobalFilter({ dataLength, setFilterTerm }) {\r\n  const [value, setValue] = React.useState(\"\")\r\n\r\n  function onChange(sVal) {\r\n    setFilterTerm(sVal)\r\n    setValue(sVal)\r\n  }\r\n\r\n  return (\r\n    <span>\r\n      Search :{\" \"}\r\n      <input\r\n        value={value || \"\"}\r\n        onChange={e => {\r\n          onChange(e.target.value)\r\n        }}\r\n        placeholder={`Word`}\r\n      />\r\n      &nbsp; : {dataLength} records\r\n    </span>\r\n  )\r\n}\r\n\r\nfunction useGlobalFilter(items, searchTerm) {\r\n  let filteredItems = []\r\n\r\n  items.forEach(item => {\r\n    let species = item.word.toLowerCase()\r\n    if (species.includes(searchTerm.toLowerCase())) {\r\n      filteredItems.push(item)\r\n    }\r\n  })\r\n\r\n  return filteredItems\r\n}\r\n\r\nconst useSort = (items, config = null) => {\r\n  const [sortConfig, setSortConfig] = React.useState(config)\r\n  \r\n  let sortableItems = items\r\n  if (sortConfig !== null) {\r\n    sortableItems.sort((a, b) => {\r\n      if (a[sortConfig.key] < b[sortConfig.key]) {\r\n        return sortConfig.direction === \"ascending\" ? -1 : 1\r\n      }\r\n      if (a[sortConfig.key] > b[sortConfig.key]) {\r\n        return sortConfig.direction === \"ascending\" ? 1 : -1\r\n      }\r\n      return 0\r\n    })\r\n  }\r\n\r\n  const requestSort = key => {\r\n    let direction = \"ascending\"\r\n    if (\r\n      sortConfig &&\r\n      sortConfig.key === key &&\r\n      sortConfig.direction === \"ascending\"\r\n    ) {\r\n      direction = \"descending\"\r\n    }\r\n\r\n    setSortConfig({ key, direction })\r\n  }\r\n\r\n  return { sortedItems: sortableItems, requestSort, sortConfig }\r\n}\r\n\r\nfunction GermanWordDataTable({ headings, data }) {\r\n  const {\r\n    initialColumns,\r\n    initialRows,\r\n    globalFilter,\r\n    setGlobalFilter,\r\n  } = useTable({ headings, data })\r\n\r\n  const filteredItems = useGlobalFilter(initialRows, globalFilter)\r\n\r\n  const { sortedItems, requestSort, sortConfig } = useSort(filteredItems)\r\n\r\n  const getClassNamesFor = name => {\r\n    if (!sortConfig) {\r\n      return\r\n    }\r\n    return sortConfig.key === name ? sortConfig.direction : undefined\r\n  }\r\n\r\n  const renderHeadings = headings.map(heading => (\r\n    <th key={heading.field}>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => requestSort(heading.field)}\r\n        className={getClassNamesFor(heading.field)}\r\n      >\r\n        {heading.name}\r\n      </button>\r\n    </th>\r\n  ))\r\n\r\n  const renderData = sortedItems.map(item => (\r\n    <React.Fragment key={item.id}>\r\n      <tr>\r\n        <td>{item.word}</td>\r\n        <td>{item.meaning}</td>\r\n        <td>{item.example}</td>\r\n        <td>{item.translation}</td>\r\n        <td>{item.wordType}</td>\r\n      </tr>\r\n    </React.Fragment>\r\n  ))\r\n\r\n  return (\r\n    <StyledTable>\r\n      <thead>\r\n        <tr>{renderHeadings}</tr>\r\n        <tr>\r\n          <th colSpan={headings.length}>\r\n            <GlobalFilter\r\n              dataLength={filteredItems.length}\r\n              setFilterTerm={setGlobalFilter}\r\n            />\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>{renderData}</tbody>\r\n    </StyledTable>\r\n  )\r\n}\r\n\r\nexport default function Home() {\r\n  return (\r\n    <PageLayout bigTitle=\"German Words\">\r\n      <Container>\r\n        <GermanWordDataTable headings={germanWords.headings} data={germanWords.rows} />\r\n      </Container>\r\n    </PageLayout>\r\n  )\r\n}\r\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/listData/birdsList.js","webpack:///./src/styles/page-styles/birdsList.js","webpack:///./src/pages/birdsList.js"],"names":["birds","headings","field","name","rows","id","species","rarity","location","locationLink","StyledTable","styled","table","div","GlobalFilter","dataLength","setFilterTerm","React","useState","value","setValue","onChange","e","sVal","target","placeholder","DataTable","data","initialColumns","initialRows","globalFilter","setGlobalFilter","useTable","filteredItems","items","searchTerm","forEach","item","toLowerCase","includes","push","useGlobalFilter","config","sortConfig","setSortConfig","sortableItems","sort","a","b","key","direction","sortedItems","requestSort","useSort","getClassNamesFor","undefined","renderHeadings","map","heading","type","onClick","className","renderData","href","rel","colSpan","length","Home","bigTitle"],"mappings":"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","file":"component---src-pages-birds-list-js-c2cdc82c892ab6bf805d.js","sourcesContent":["export const birds = {\r\n  headings: [\r\n    {\r\n        field: \"species\",\r\n        name: \"Species\",\r\n    },\r\n    {\r\n        field: \"rarity\",\r\n        name: \"Rarity\",\r\n    },\r\n    {\r\n        field: \"location\",\r\n        name: \"Location\",\r\n    },\r\n  ],\r\n  rows: [\r\n    {\r\n      id: 1,\r\n      species: \"Alexandrine Parakeet\",\r\n      rarity: 0,\r\n      location: \"Everywhere\",\r\n      locationLink: \"https://www.google.com\",\r\n    },\r\n    {\r\n      id: 2,\r\n      species: \"Purple Sunbird\",\r\n      rarity: 0,\r\n      location: \"Everywhere\",\r\n      locationLink: \"https://www.google.com\",\r\n    },\r\n    {\r\n      id: 3,\r\n      species: \"Red Breasted Munia\",\r\n      rarity: 3,\r\n      location: \"ARAI\",\r\n      locationLink: \"https://www.google.com\",\r\n    },\r\n    {\r\n      id: 4,\r\n      species: \"Scaly Breasted Munia\",\r\n      rarity: 1,\r\n      location: \"Everywhere\",\r\n      locationLink: \"https://www.google.com\",\r\n    },\r\n    {\r\n      id: 5,\r\n      species: \"Common Crow\",\r\n      rarity: 0,\r\n      location: \"Everywhere\",\r\n      locationLink: \"https://www.google.com\",\r\n    },\r\n    {\r\n      id: 6,\r\n      species: \"Silverbill \",\r\n      rarity: 3,\r\n      location: \"ARAI\",\r\n      locationLink: \"https://www.google.com\",\r\n    },\r\n    {\r\n      id: 7,\r\n      species: \"Crested Serpent Eagle\",\r\n      rarity: 4,\r\n      location: \"Paabe Ghaat\",\r\n      locationLink: \"https://www.google.com\",\r\n    },\r\n  ],\r\n}\r\n","import styled from \"styled-components/macro\"\r\n\r\nexport const StyledTable = styled.table`\r\n  width: 90%;\r\n  max-width : 800px;\r\n  padding: 10px;\r\n  margin: 10px;\r\n  border: 1px solid black;\r\n  text-align: center;\r\n  font-weight: normal;\r\n\r\n  th,\r\n  td {\r\n    border: 1px solid black;\r\n  }\r\n\r\n  tr:nth-child(even) {\r\n    background-color: lightGrey;\r\n  }\r\n\r\n  thead {\r\n    text-align: center;\r\n    background: var(--customDarkGrey);\r\n  }\r\n\r\n  thead button:focus {\r\n    border: none;\r\n    outline: none;\r\n    background: white;\r\n    color: var(--customDarkGrey);\r\n  }\r\n\r\n  thead button {\r\n    text-align: center;\r\n    border: none;\r\n    background: none;\r\n    color: white;\r\n  }\r\n\r\n  thead button::after {\r\n    content: \" ↕\";\r\n  }\r\n\r\n  thead button.ascending::after {\r\n    content: \" ↓\";\r\n  }\r\n\r\n  thead button.descending::after {\r\n    content: \" ↑\";\r\n  }\r\n\r\n  tbody {\r\n    width: 90%;\r\n  }\r\n`\r\n\r\nexport const TableContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: auto;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 10px;\r\n\r\n  padding: 1rem;\r\n\r\n  table {\r\n    border: 2px solid black;\r\n    text-align : center;\r\n    width : 90%;\r\n    max-width : 800px;\r\n\r\n    th{ \r\n      background : var(--customDarkGrey);\r\n      color: white;\r\n    }\r\n\r\n    th,\r\n    td {\r\n      border 1px solid black;\r\n      margin: 0;\r\n      padding: 0.5rem;\r\n    }\r\n  }\r\n`","import React from \"react\"\r\nimport { Container } from \"../styles/global-styles\"\r\nimport { PageLayout } from \"../components\"\r\nimport { birds } from \"../listData/birdsList\"\r\n\r\nimport { StyledTable } from \"../styles/page-styles/birdsList\"\r\n\r\nfunction useTable({ headings, data }) {\r\n  const [globalFilter, setGlobalFilter] = React.useState(\"\")\r\n\r\n  return {\r\n    initialColumns: headings,\r\n    initialRows: data,\r\n    globalFilter,\r\n    setGlobalFilter,\r\n  }\r\n}\r\n\r\nfunction GlobalFilter({ dataLength, setFilterTerm }) {\r\n  const [value, setValue] = React.useState(\"\")\r\n\r\n  function onChange(sVal) {\r\n    setFilterTerm(sVal)\r\n    setValue(sVal)\r\n  }\r\n\r\n  return (\r\n    <span>\r\n      Search :{\" \"}\r\n      <input\r\n        value={value || \"\"}\r\n        onChange={e => {\r\n          onChange(e.target.value)\r\n        }}\r\n        placeholder={`Species Name`}\r\n      />\r\n      &nbsp; : {dataLength} records\r\n    </span>\r\n  )\r\n}\r\n\r\nfunction useGlobalFilter(items, searchTerm) {\r\n  let filteredItems = []\r\n\r\n  items.forEach(item => {\r\n    let species = item.species.toLowerCase()\r\n    if (species.includes(searchTerm.toLowerCase())) {\r\n      filteredItems.push(item)\r\n    }\r\n  })\r\n\r\n  return filteredItems\r\n}\r\n\r\nconst useSort = (items, config = null) => {\r\n  const [sortConfig, setSortConfig] = React.useState(config)\r\n  \r\n  let sortableItems = items\r\n  if (sortConfig !== null) {\r\n    sortableItems.sort((a, b) => {\r\n      if (a[sortConfig.key] < b[sortConfig.key]) {\r\n        return sortConfig.direction === \"ascending\" ? -1 : 1\r\n      }\r\n      if (a[sortConfig.key] > b[sortConfig.key]) {\r\n        return sortConfig.direction === \"ascending\" ? 1 : -1\r\n      }\r\n      return 0\r\n    })\r\n  }\r\n\r\n  const requestSort = key => {\r\n    let direction = \"ascending\"\r\n    if (\r\n      sortConfig &&\r\n      sortConfig.key === key &&\r\n      sortConfig.direction === \"ascending\"\r\n    ) {\r\n      direction = \"descending\"\r\n    }\r\n\r\n    setSortConfig({ key, direction })\r\n  }\r\n\r\n  return { sortedItems: sortableItems, requestSort, sortConfig }\r\n}\r\n\r\nfunction DataTable({ headings, data }) {\r\n  const {\r\n    initialColumns,\r\n    initialRows,\r\n    globalFilter,\r\n    setGlobalFilter,\r\n  } = useTable({ headings, data })\r\n\r\n  const filteredItems = useGlobalFilter(initialRows, globalFilter)\r\n\r\n  const { sortedItems, requestSort, sortConfig } = useSort(filteredItems)\r\n\r\n  const getClassNamesFor = name => {\r\n    if (!sortConfig) {\r\n      return\r\n    }\r\n    return sortConfig.key === name ? sortConfig.direction : undefined\r\n  }\r\n\r\n  const renderHeadings = headings.map(heading => (\r\n    <th key={heading.field}>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => requestSort(heading.field)}\r\n        className={getClassNamesFor(heading.field)}\r\n      >\r\n        {heading.name}\r\n      </button>\r\n    </th>\r\n  ))\r\n\r\n  const renderData = sortedItems.map(item => (\r\n    <tr key={item.id}>\r\n      <td>{item.species}</td>\r\n      <td>{item.rarity}</td>\r\n      <td>\r\n        <a href={item.locationLink} target=\"_blank\" rel=\"noreferrer\">\r\n          {item.location}\r\n        </a>\r\n      </td>\r\n    </tr>\r\n  ))\r\n\r\n  return (\r\n    <StyledTable>\r\n      <thead>\r\n        <tr>{renderHeadings}</tr>\r\n        <tr>\r\n          <th colSpan={3}>\r\n            <GlobalFilter\r\n              dataLength={filteredItems.length}\r\n              setFilterTerm={setGlobalFilter}\r\n            />\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>{renderData}</tbody>\r\n    </StyledTable>\r\n  )\r\n}\r\n\r\nexport default function Home() {\r\n  return (\r\n    <PageLayout bigTitle=\"Birds\">\r\n      <Container>\r\n        <DataTable headings={birds.headings} data={birds.rows} />\r\n      </Container>\r\n    </PageLayout>\r\n  )\r\n}\r\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/utils/helpers.js","webpack:///./src/pages/index.js"],"names":["getImageMap","images","regex","hasMultipleImages","limit","reduce","map","image","slug","node","relativePath","match","hasOwnProperty","length","push","childImageSharp","fluid","arr","data","site","siteMetadata","unemployed","firstName","lastName","occupation","useContext","ThemeContext","dark","title","className","background","style","fontSize","color","href","target","rel","icon","download","query"],"mappings":"mOAAe,G,UAAA,CACbA,YAAa,SAACC,EAAQC,EAAOC,EAA2BC,GACtD,YADoE,IAAzCD,OAAoB,QAAqB,IAAdC,MAAQ,GACvDH,EAAOI,QAAO,SAACC,EAAKC,GACzB,IAAMC,EAAOD,EAAME,KAAKC,aAAaC,MAAMT,GAAO,GAClD,GAAIC,EACF,GAAIG,EAAIM,eAAeJ,GACjBF,EAAIE,GAAMK,QAAUT,GACtBE,EAAIE,GAAMM,KAAKP,EAAME,KAAKM,gBAAgBC,WACvC,CACL,IAAMC,EAAM,GACZA,EAAIH,KAAKP,EAAME,KAAKM,gBAAgBC,OACpCV,EAAIE,GAAQS,OAGdX,EAAIE,GAAQD,EAAME,KAAKM,gBAAgBC,MAEzC,OAAOV,IACN,Q,kCCjBP,kIAQe,sBAAe,IAAD,IAAXY,KAC6CC,KAAKC,aAA1DC,EADmB,EACnBA,WAAYC,EADO,EACPA,UAAWC,EADJ,EACIA,SADJ,EACcC,WACxBC,qBAAWC,KAApBC,KACR,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,SACX,kBAAC,IAAD,CAAWC,UAAU,wBAAwBC,WAAW,IACtD,kBAAC,IAAD,CAAWD,UAAU,aACnB,wBACEE,MAAO,CACLC,SAAU,kBACVC,MAAO,UAGT,0BAAMJ,UAAU,cAAcP,GANhC,IAOE,0BAAMO,UAAU,aAAaN,IAE/B,2BACE,uEAGHF,GACC,uBAAGQ,UAAU,QACX,2EAGJ,wBAAIA,UAAU,cACd,yBAAKA,UAAU,oCACb,uBACEK,KAAK,6BACLC,OAAO,SACPC,IAAI,uBAEJ,kBAAC,IAAD,CACEC,KAAM,CAAC,MAAO,UACdR,UAAU,eACVD,MAAM,YAGV,uBACEM,KAAK,2BACLC,OAAO,SACPC,IAAI,uBAEJ,kBAAC,IAAD,CACEC,KAAM,CAAC,MAAO,YACdR,UAAU,aACVD,MAAM,YAGV,uBACEM,KAAK,4CACLC,OAAO,SACPC,IAAI,uBAEJ,kBAAC,IAAD,CACEC,KAAM,CAAC,MAAO,aACdR,UAAU,kBACVD,MAAM,WAGV,uBAAGM,KAAK,+BAA+BC,OAAO,SAASG,UAAQ,GAC7D,kBAAC,IAAD,CACED,KAAM,CAAC,MAAO,YACdR,UAAU,aACVD,MAAM,gBASb,IAAMW,EAAK","file":"component---src-pages-index-js-730c8bd212f9de7f62da.js","sourcesContent":["export default {\r\n  getImageMap: (images, regex, hasMultipleImages = false, limit = 3) => {\r\n    return images.reduce((map, image) => {\r\n      const slug = image.node.relativePath.match(regex)[0]\r\n      if (hasMultipleImages) {\r\n        if (map.hasOwnProperty(slug)) {\r\n          if (map[slug].length <= limit)\r\n            map[slug].push(image.node.childImageSharp.fluid)\r\n        } else {\r\n          const arr = []\r\n          arr.push(image.node.childImageSharp.fluid)\r\n          map[slug] = arr\r\n        }\r\n      } else {\r\n        map[slug] = image.node.childImageSharp.fluid\r\n      }\r\n      return map\r\n    }, {})\r\n  },\r\n}\r\n","import React, { useContext } from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport ThemeContext from \"../utils/theme\"\r\nimport { PageLayout } from \"../components\"\r\nimport { SEO } from \"../utils\"\r\nimport { Container, Image } from \"react-bootstrap\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"  \r\n\r\nexport default ({ data }) => {\r\n  const { unemployed, firstName, lastName, occupation } = data.site.siteMetadata\r\n  const { dark } = useContext(ThemeContext)\r\n  return (\r\n    <PageLayout>\r\n      <SEO title=\"Home\" />\r\n      <Container className=\"text-center pt-5 mt-5\" background=\"\">\r\n        <Container className=\"py-0 my-0\">\r\n          <h1\r\n            style={{\r\n              fontSize: \"min(5rem, 10vw)\",\r\n              color: \"black\",\r\n            }}\r\n          >\r\n            <span className=\"first-name\">{firstName}</span>&nbsp;\r\n            <span className=\"last-name\">{lastName}</span>\r\n          </h1>\r\n          <p>\r\n            <i>{`Currently in the middle of some things`}</i>\r\n          </p>\r\n        </Container>\r\n        {unemployed && (\r\n          <p className=\"mt-2\">\r\n            <b> Hey! I am looking for new opportunities :)</b>\r\n          </p>\r\n        )}\r\n        <hr className=\"my-3 w-25\" />\r\n        <div className=\"d-md-inline-flex icons-container\">\r\n          <a\r\n            href=\"https://github.com/Souruly\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <FontAwesomeIcon\r\n              icon={[\"fab\", \"github\"]}\r\n              className=\"icons github\"\r\n              title=\"Github\"\r\n            />\r\n          </a>\r\n          <a\r\n            href=\"mailto:souruly@gmail.com\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <FontAwesomeIcon\r\n              icon={[\"fas\", \"envelope\"]}\r\n              className=\"icons mail\"\r\n              title=\"e-mail\"\r\n            />\r\n          </a>\r\n          <a\r\n            href=\"https://www.instagram.com/souravkulkarni/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <FontAwesomeIcon\r\n              icon={[\"fab\", \"instagram\"]}\r\n              className=\"icons instagram\"\r\n              title=\"insta\"\r\n            />\r\n          </a>\r\n          <a href=\"../../mydata/Kulkarni_CV.pdf\" target=\"_blank\" download>\r\n            <FontAwesomeIcon\r\n              icon={[\"fas\", \"file-alt\"]}\r\n              className=\"icons file\"\r\n              title=\"Resume\"\r\n            />\r\n          </a>\r\n        </div>\r\n      </Container>\r\n    </PageLayout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        unemployed\r\n        firstName\r\n        lastName\r\n        occupation\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}